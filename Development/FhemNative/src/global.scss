/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import '~@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";

@import '~ngx-toastr/toastr';

// Global Styles
.swiper-pagination {
    top: 0px;
    height: 0;
}

ion-content,
ion-toolbar,
ion-item{
    --background: none;
}
ion-header{
    height: 56px;
    ion-title.ios{
        padding-left: 10px;
        text-align: left;
    }
    ion-toolbar.ios{
        --min-height: 56px;
        ion-title{
            height: 65px;
        }
    }
}

ion-alert.wider-btns{
    button.alert-tappable{
        height: 80px !important;
    }
    .alert-radio-label{
        white-space: normal !important;
    }
}

ion-slides.custom-pagination{
    .swiper-pagination.swiper-pagination-bullets{
       top: 45px;
        position: fixed;
    }
}

fa-icon{
    width: 1em;
    .svg-inline--fa{
        width: inherit !important;
        height: inherit;
    }
}

//Ionic Modal config
.modal-fullscreen {
    .modal-wrapper {
        position: absolute;
        top: 0;
        left: 0;
        display: block;
        width: 100%;
        height: 100%;
    }
}

// global font styling
h1, h2, h3, p, span{
	font-family: 'Roboto';
}

// Toast messages
.notify, .toast {
    min-height: 45px;
    max-width: 150px;
    min-width: 100px;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;
    padding: 5px;
    margin-top: 3px;
    &.toast-success {
        background-color: var(--btn-green);
    }
    &.toast-info {
        background-color: var(--btn-blue);
        background-image: none;
    }
    &.toast-error {
        background-color: var(--btn-red);
    }
    .toast-title {
        font-size: 16px;
        line-height: 15px;
    }
    .toast-message {
        font-size: 14px;
    }
}
#toast-container.toast-top-center {
    pointer-events: all;
    .toast-info {
        position: absolute;
        top: 15px;
        left: 50%;
        transform: translateX(-50%);
    }
}

button:focus{
    outline: 0px;
}
// Add Button
.add-btn,
.btn-round{
	position: relative;
	float: right;
	width: 45px;
	height: 45px;
	border-radius: 50%;
	border: none;
	box-shadow: 0px 4px 10px 0px rgba(0,0,0,0.3);
	z-index: 100;
	font-size: 25px;
    padding: 0;
    &.fixed-top-right{
        position: fixed;
        top: 0;
        right: 0;
    }
    &.right-pad{
        margin-right: 8px;
    }
    &.blue{
        color: var(--btn-blue);
    }
	.line{
		position: absolute;
		left: 50%;
		top: 50%;
		width: 60%;
		height: 5px;
		background: var(--gradient);
		border-radius: 5px;
		transition: all .3s ease;
		&.top{
			transform: translate3d(-50%, -50%,0);
		}
		&.bottom{
			transform: translate3d(-50%, -50%,0) rotate(90deg);
		}
	}
	&:hover .line.top{
		transform: translate3d(-50%, -50%,0) rotate(90deg);
	}
	&:hover .line.bottom{
		transform: translate3d(-50%, -50%,0) rotate(180deg);
	}
}

[resize] {
    .movable {
        width: 100%;
        height: 100%;
        position: absolute;
        left: 0;
        top: 0;
        z-index: 100;
        pointer-events: all;
        .rect {
            position: absolute;
            width: 20px;
            height: 20px;
            z-index: 1;
            transition: all .2s ease;
            &:before {
                content: "";
                display: block;
                position: absolute;
                z-index: 1;
                top: 0;
                bottom: 0;
                left: 0;
                right: 0;
                margin: auto;
                width: 15px;
                height: 15px;
                background-color: #14a9d5;
                transition: all .2s ease;
            }
            &.top-center,
            &.bottom-center{
                cursor: ns-resize;
            }
            &.top-left,
            &.bottom-right{
                cursor: nwse-resize;
            }
            &.top-right,
            &.bottom-left{
                cursor: nesw-resize;
            }
            &.left-center,
            &.right-center{
                cursor: ew-resize;
            }
            &.top-left, &.top-right, &.top-center {
                top: -10px;
            }
            &.top-left, &.bottom-left, &.left-center {
                left: -10px;
            }
            &.top-right, &.bottom-right, &.right-center {
                right: -10px;
            }
            &.bottom-left, &.bottom-right, &.bottom-center {
                bottom: -10px;
            }
            &.top-center, &.bottom-center {
                left: 50%;
                transform: translate3d(-50%, 0, 0);
            }
            &.right-center, &.left-center {
                top: 50%;
                transform: translate3d(0, -50%, 0);
            }
        }
        .overlay-move {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            border: 1px solid rgba(157, 226, 246, 1);
            background: rgba(157, 226, 246, 0.2);
            transition: all .2s ease;
        }
    }
    &.selected-for-copy > .movable {
        .overlay-move{
            background: rgba(243, 192, 47, 0.2);
            border: 1px solid #ffbd00;
        }
        .rect:before{
            background-color: #ffbd00;
        }
    }
}
// pin component
.pinned{
    &::after{
        content: "";
        position: absolute;
        background: url(
            "data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 384 512'><path fill='rgb(20, 169, 213)' d='M298.028 214.267L285.793 96H328c13.255 0 24-10.745 24-24V24c0-13.255-10.745-24-24-24H56C42.745 0 32 10.745 32 24v48c0 13.255 10.745 24 24 24h42.207L85.972 214.267C37.465 236.82 0 277.261 0 328c0 13.255 10.745 24 24 24h136v104.007c0 1.242.289 2.467.845 3.578l24 48c2.941 5.882 11.364 5.893 14.311 0l24-48a8.008 8.008 0 0 0 .845-3.578V352h136c13.255 0 24-10.745 24-24-.001-51.183-37.983-91.42-85.973-113.733z'></path></svg>"
        ) no-repeat;
        background-position: center;
        background-size: 60%;
        height: 35px;
        width: 35px;
        left: 0px;
        top: 0px;
        z-index: 100;
    }
}

// Directive styles
// Colorizer
.dark{
    &.background.primary{
        background-color: var(--primary-dark) !important;
    }
    &.background.secondary{
        background-color: var(--secondary-dark) !important;
    }
    &.background.secondary-op{
        background-color: var(--secondary-dark-op) !important;
    }
    &.background.text{
        background-color: var(--text-dark) !important;
    }
    &.color.text{
        color: var(--text-dark) !important;
        &.active{
            color: var(--active-dark) !important;
        }
    }
    &.color.des{
        color: var(--des-dark) !important;
    }
}

.bright{
    &.background.primary{
        background-color: var(--primary-bright) !important;
    }
    &.background.secondary{
        background-color: var(--secondary-bright) !important;
    }
    &.background.secondary-op{
        background-color: var(--secondary-bright-op) !important;
    }
    &.background.text{
        background-color: var(--text-bright) !important;
    }
    &.color.text{
        color: var(--text-bright) !important;
        &.active{
            color: var(--active-bright) !important;
        }
    }
    &.color.des{
        color: var(--des-bright) !important;
    }
}